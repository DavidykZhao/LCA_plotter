install.packages("roxygen2")
library(SHARP)
test_func()
getAnywhere(soft)
getAnywhere(test_func)
library(SHARP)
test_func()
test_func(3)
library(SHARP)
test_func(3)
?test_func
use_testthat()
library(usethis)
use_testthat()
install.packages(testthat)
install.packages('testthat')
use_testthat()
use_test()
install.packages("xgboost")
x = iris$Petal.Width
y = iris$Petal.Length
fit1 = lm(y ~ x)
fit1
fit2 = lm(y ~ I(scale(x)))
fit2
mean(y)
fit3 = lm(I(scale(y)) ~ I(scale(x)))
fit3
0.84^2
0.84^2 * 0.52 + 0.279
0.69^2+0.524
0.85^2 + 0.279
install.packages("reshape")
dta = read.csv("nonzero_dataset.csv")
summary(dta)
profile_plot = function(data){
f = with(data, cbind(tax, religion, free_election, state_aid, civil_rights, women)~1)
min_bic <- 1000000
for(i in 1:7){
lc <- poLCA(f, data, nclass=i, maxiter=3000,
tol=1e-5, na.rm=FALSE,
nrep=10, verbose=TRUE, calc.se=TRUE)
if(lc$bic < min_bic){
min_bic <- lc$bic
LCA_best_model <- lc
}
}
probs = LCA_best_model$probs
n_class = length(LCA_best_model$P)
profile_tb = data.frame(
tax = replicate(n_class, NA),
religion = replicate(n_class, NA),
free_election = replicate(n_class, NA),
state_aid = replicate(n_class, NA),
civil_rights = replicate(n_class, NA),
women = replicate(n_class, NA))
for (i in 1:6) {
if (length(probs[[i]][1,]) < 10) {
probs[[i]] = cbind(probs[[i]], matrix(0, nrow = nrow(probs[[i]]), ncol = 10 - ncol(probs[[i]])))
}
profile_tb[, i] = probs[[i]] %*% 1:10
}
rownames(profile_tb) = paste(rep("class", n_class), seq(1, n_class, 1), sep = "_")
profile_tb = rownames_to_column(profile_tb)
colnames(profile_tb)[1] = "class"
profile_long = reshape::melt(profile_tb, id.vars = "class")
p = ggplot(profile_long, aes(x = variable, y = value, group = class, color = class)) +
geom_point(size = 2.25, aes(shape = class))+
geom_line(size = 1.00) +
labs(x = NULL, y = "Mean value of the response") +
theme_bw(base_size = 14)+
ggtitle(paste(paste("class", 1:length(LCA_best_model$P), sep = "_"),
round(LCA_best_model$P, 3), collapse = ", "))+
theme(plot.margin=unit(c(1.5,1.5,1.5,1.2),"cm"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 13))+
theme(plot.title = element_text(hjust = 0.5, size = 10))
print(p)
return(p)
# library(plotly)
#
# plotly_p = ggplotly(p, tooltip = "all") %>%
#   layout(legend = list(orientation = "h", y = 1.2))
# print(plotly_p)
# return(plotly_p)
}
dta$country
US = dta %>%
filter(country = 'US')
unique(dta$country)
US = dta %>%
filter(country = 'United States')
library(tidyverse)
install.packages('tidyverse')
US = dta %>%
filter(country = 'United States')
library("tidyverse")
US = dta %>%
filter(country = 'United States')
US = dta %>%
filter(country == 'United States')
profile_plot(US)
install.packages('poLCA')
library(poLCA)
profile_plot(US)
dim(Data)
dim(dta)
f
f = with(US, cbind(tax, religion, free_election, state_aid, civil_rights, women)~1)
f
print(f)
length(f)
?with
names_model = names(US)
names_model
names_model = names_model[2:]
names_model = names_model[-1]
names_model
f = with(data, cbind(names_model)~1)
dta$"country"
dta$'country'
?find_best_fit
getAnywhere(find_best_fit)
library(roxygen2)
getAnywhere(find_best_fit)
library(LCAplotter)
getAnywhere(find_best_fit)
?find_best_fit
